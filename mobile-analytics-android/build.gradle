apply plugin: 'com.android.library'

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    compileOptions {
        sourceCompatibility sourceCompatibilityVersion
        targetCompatibility targetCompatibilityVersion
    }

    lintOptions {
        textOutput 'stdout'
        textReport true
        lintConfig rootProject.file('lint.xml')
    }

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode VERSION_CODE
        versionName "${VERSION_NAME}"

        // library 混淆 -> 随 library 引用，自动添加到 apk 打包混淆
        consumerProguardFiles 'consumer-proguard-rules.txt'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    if (FLAVOR_NAME != null && !FLAVOR_NAME.isEmpty()) {
        defaultPublishConfig "${FLAVOR_NAME}Release"
    } else {
        publishNonDefault true
    }

    flavorDimensions 'default'

    productFlavors {
        baidu {
            dimension 'default'
        }
        talkingdata {
            dimension 'default'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    if (FLAVOR_NAME != null) {
        if (FLAVOR_NAME == 'baidu') {
            implementation "io.github.v7lin:baidu-analytics-android:${baiduAnalyticsAndroidVersion}"
        } else if (FLAVOR_NAME == 'talkingdata') {
            implementation "io.github.v7lin:talkingdata-analytics-android:${talkingdataAnalyticsAndroidVersion}"
        }
    } else {
        baiduImplementation "io.github.v7lin:baidu-analytics-android:${baiduAnalyticsAndroidVersion}"
        talkingdataImplementation "io.github.v7lin:talkingdata-analytics-android:${talkingdataAnalyticsAndroidVersion}"
    }
}

apply from: '../publish.gradle'